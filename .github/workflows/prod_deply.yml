name: CI - Terraform deploy to prod
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: prod-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.13"

      - name: Terraform fmt (check)
        run: terraform fmt -check
        working-directory: ./

      - name: Terraform init
        run: terraform init -input=false
        working-directory: ./

      - name: Terraform validate
        run: terraform validate
        working-directory: ./

      - name: Terraform plan
        id: tfplan
        run: terraform plan -input=false -refresh=true -out=plan.tfplan
        working-directory: ./

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./plan.tfplan

  apply:
    name: Terraform Apply (prod)
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ./

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.13"

      - name: Terraform apply
        run: terraform apply -input=false "plan.tfplan"
        working-directory: ./